[{"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\index.js":"1","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\App.js":"2","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\NavBar.js":"4","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Home.js":"5","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Movies.js":"6","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Series.js":"7","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\WatchList.js":"8","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\MovieComponent.js":"9","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SerieComponent.js":"10","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\index.js":"11","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\combinedReducers.js":"12","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\combinedActions.js":"13","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\combinedAPI.js":"14","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\movieReducers.js":"15","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\movieActions.js":"16","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\movieAPI.js":"17","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\serieReducers.js":"18","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\serieActions.js":"19","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\serieAPI.js":"20","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\Search.js":"21","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SideNav.js":"22","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SideNavEnglish.js":"23","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\Footer.js":"24","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\SerieDetails.js":"25","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\MovieDetails.js":"26","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\movieDetailsReducers.js":"27","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\serieDetailsReducers.js":"28","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\movieDetailsActions.js":"29","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\categories.js":"30","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\serieDetailsActions.js":"31","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Newest.js":"32","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\TopRated.js":"33","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Upcoming.js":"34","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\SearchPage.js":"35"},{"size":818,"mtime":1608973757788,"results":"36","hashOfConfig":"37"},{"size":2436,"mtime":1610266934570,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"37"},{"size":2022,"mtime":1610284213304,"results":"40","hashOfConfig":"37"},{"size":7874,"mtime":1610043778897,"results":"41","hashOfConfig":"37"},{"size":3430,"mtime":1610219198069,"results":"42","hashOfConfig":"37"},{"size":4254,"mtime":1610219105983,"results":"43","hashOfConfig":"37"},{"size":156,"mtime":1608963041487,"results":"44","hashOfConfig":"37"},{"size":1619,"mtime":1610284398944,"results":"45","hashOfConfig":"37"},{"size":1811,"mtime":1610219456033,"results":"46","hashOfConfig":"37"},{"size":552,"mtime":1609312939998,"results":"47","hashOfConfig":"37"},{"size":992,"mtime":1610045806860,"results":"48","hashOfConfig":"37"},{"size":1266,"mtime":1610041203681,"results":"49","hashOfConfig":"37"},{"size":1439,"mtime":1610286018172,"results":"50","hashOfConfig":"37"},{"size":1030,"mtime":1609856860951,"results":"51","hashOfConfig":"37"},{"size":1601,"mtime":1610037295629,"results":"52","hashOfConfig":"37"},{"size":2029,"mtime":1610286520350,"results":"53","hashOfConfig":"37"},{"size":1230,"mtime":1610037659458,"results":"54","hashOfConfig":"37"},{"size":1598,"mtime":1609857631292,"results":"55","hashOfConfig":"37"},{"size":1935,"mtime":1610286520350,"results":"56","hashOfConfig":"37"},{"size":972,"mtime":1610045728978,"results":"57","hashOfConfig":"37"},{"size":3080,"mtime":1610283624947,"results":"58","hashOfConfig":"37"},{"size":3076,"mtime":1610283691534,"results":"59","hashOfConfig":"37"},{"size":1481,"mtime":1610268829238,"results":"60","hashOfConfig":"37"},{"size":7392,"mtime":1610280417258,"results":"61","hashOfConfig":"37"},{"size":7678,"mtime":1610270385047,"results":"62","hashOfConfig":"37"},{"size":706,"mtime":1609343027839,"results":"63","hashOfConfig":"37"},{"size":724,"mtime":1609606292164,"results":"64","hashOfConfig":"37"},{"size":431,"mtime":1609314213661,"results":"65","hashOfConfig":"37"},{"size":4802,"mtime":1609623012606,"results":"66","hashOfConfig":"37"},{"size":433,"mtime":1609314220604,"results":"67","hashOfConfig":"37"},{"size":2382,"mtime":1610036708296,"results":"68","hashOfConfig":"37"},{"size":2451,"mtime":1610038198048,"results":"69","hashOfConfig":"37"},{"size":1624,"mtime":1610039653726,"results":"70","hashOfConfig":"37"},{"size":2983,"mtime":1610047169297,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"yzs0up",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\index.js",[],["153","154"],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\App.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reportWebVitals.js",[],["155","156"],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\NavBar.js",["157"],"import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { motion } from \"framer-motion\";\r\nimport { Link } from 'react-router-dom';\r\nimport Search from './Search';\r\n\r\nconst NavBar = ({isFrench, setIsFrench, isOpen, setIsOpen, toSearch, setToSearch}) => {\r\n    const [searchBarOpen, setSearchBarOpen] = useState(false);\r\n    return ( \r\n        <nav className={ isOpen ? \"navbar navbar-open\" : \"navbar\"}>\r\n                <div className=\"navbar-logo hidden\">\r\n                    <Link to=\"/\" style={{ textDecoration: \"none\", color: \"#fff\" }}>\r\n                        <h3>TRAILER ADDICT</h3>\r\n                    </Link>\r\n                </div>\r\n                <div className={searchBarOpen ? \"search-bar search-bar-open\" : \"search-bar search-bar-close\"}>\r\n                    <Search isFrench={isFrench} toSearch={toSearch} \r\n                        setToSearch={setToSearch} className=\"search-bar-component\" />\r\n                </div>\r\n            <div className=\"rightNav\">\r\n                <ul>\r\n                        <li onClick={() => setIsFrench(!isFrench)}> \r\n                            <span className={isFrench ? \"notSelected\" : \"selected\"}>EN/</span>\r\n                            <span className={isFrench ? \"selected\" : \"notSelected\"}>FR</span> \r\n                        </li>\r\n                        <li onClick={() => setSearchBarOpen(!searchBarOpen)} className=\"search-logo\">\r\n                            <FontAwesomeIcon icon={ searchBarOpen ? faTimes : faSearch} style={{ fontSize : \"1.2em\" }} />\r\n                        </li>\r\n                        <li \r\n                            onClick={() => setIsOpen(!isOpen)}><FontAwesomeIcon className=\"bars\" icon={faBars} \r\n                            style={{ fontSize : \"1.2em\" }} />\r\n                        </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Home.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Movies.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Series.js",["158","159"],"import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchPopularSeries } from '../actions/serieActions';\r\nimport SerieComponent from '../components/SerieComponent';\r\nimport { categoriesSeriesEN, categoriesSeriesFR } from '../api/categories';\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst Series = ({isFrench, isOpen}) => {\r\n    const dispatch = useDispatch();\r\n    const language = isFrench ? \"fr\" : \"\";\r\n    const [page, setPage] = useState(1);\r\n    const [genres, setGenres] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPopularSeries(language, page, genres));\r\n    }, [dispatch, language, page, genres]);\r\n\r\n    const { popularSeries, numOfPages } = useSelector((state) => state.series);\r\n\r\n    //Changer de catégorie\r\n    const changeCategoryHandler = (id) => {\r\n        setPage(1);\r\n        setGenres(id);\r\n        getCategoryName(id);\r\n    };\r\n\r\n    const getCategoryName = (id) => {\r\n        if (isFrench) {\r\n            const categoryFilter = categoriesSeriesFR.filter(\r\n                (category) => category.id === id\r\n            );\r\n            const categoryName = categoryFilter.map((category) => category.name);\r\n            return categoryName.toString();\r\n        } else {\r\n            const categoryFilter = categoriesSeriesEN.filter(\r\n                (category) => category.id === id\r\n            );\r\n            const categoryName = categoryFilter.map((category) => category.name);\r\n            return categoryName.toString();\r\n        }\r\n    };\r\n\r\n    //Changer de page\r\n    const handlePageClick = ({ selected: selectedPage }) => {\r\n        setPage(selectedPage + 1);\r\n        //Defiler vers le haut\r\n        document.documentElement.scrollTop = 0;\r\n    };\r\n\r\n    //Affichage des categories\r\n    const frenchCategories = categoriesSeriesFR.map((category) => (\r\n        <li onClick={() => changeCategoryHandler(category.id)} id={category.id} \r\n            className={ genres === category.id ? \"category-active\" : \"\"}>\r\n            {category.name}\r\n        </li>\r\n    ));\r\n    const englishCategories = categoriesSeriesEN.map((category) => (\r\n        <li onClick={() => changeCategoryHandler(category.id)} id={category.id} \r\n            className={ genres === category.id ? \"category-active\" : \"\"}>\r\n            {category.name}\r\n        </li>\r\n    ));\r\n\r\n  //Affichage des séries\r\n    const printPopularSeries = popularSeries.map(item => \r\n        <SerieComponent\r\n          key={item.id}\r\n          id={item.id}\r\n          title={item.name}\r\n          rating={item.vote_average}\r\n          release={item.first_air_date}\r\n          overview={item.overview}\r\n          cover_path={item.poster_path}\r\n          popularity={item.popularity}\r\n        />\r\n    )\r\n    //Traduction\r\n    const headerFrench = \r\n        <div className=\"series-title\">\r\n            <h1>Vous ne voulez pas perdre de temps ?</h1>\r\n            <h3>Voici une selection des séries les plus populaires en ce moment</h3>\r\n        </div>\r\n    const headerEnglish = \r\n        <div className=\"series-title\">\r\n            <h1>You don't want to waste time ?</h1>\r\n            <h3>Here is a selection of the most popular series at the moment</h3>\r\n        </div>\r\n\r\n    return ( \r\n        <div className={isOpen ? \"series series-open\" : \"series\"}>\r\n            {/* {\r\n                isFrench ? headerFrench : headerEnglish\r\n            } */}\r\n            <div className=\"series-title\">\r\n                <ul>{isFrench ? frenchCategories : englishCategories}</ul>\r\n                {/* <h1>{isFrench ? \"Series >\" : \"TV Shows >\"} {getCategoryName(genres)} > Page {page}</h1> */}\r\n            </div>\r\n            <div className=\"popular-series\">\r\n                {printPopularSeries}\r\n            </div>\r\n            <ReactPaginate\r\n                previousLabel={\"←\"}\r\n                nextLabel={\"→\"}\r\n                forcePage={page - 1}\r\n                pageCount={numOfPages}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Series;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\WatchList.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\MovieComponent.js",["160"],"import React from 'react'\r\nimport { fetchCover } from \"../api/combinedAPI\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieComponent = ({ id, title, rating, release, overview, cover_path}) => {\r\n    const cover = fetchCover(cover_path);\r\n    return ( \r\n        <Link style={{ textDecoration: \"none\" }} to={{ pathname: `/movie/${id}` }}>\r\n            <motion.div initial={{ opacity: 0, scale: 0}} animate={{ opacity: 1, scale: 1 }} \r\n                transition={{ duration: 0.7 }} className=\"movie\">\r\n                <div className=\"movie-image\">\r\n                    <img src={cover} alt=\"\"/>\r\n                </div> \r\n                <motion.div className=\"overlay\" initial={{ opacity: 0 }} animate={{ opacity: 1}}\r\n                transition={{ delay: 0.7}}>\r\n                    <div className=\"title\">\r\n                        <h3> {title} </h3>\r\n                    </div>\r\n                    <div className=\"subtitle\">\r\n                        <h4> <FontAwesomeIcon icon={faStar} style={{ color: \"yellow\" }}/> {rating} </h4>\r\n                        <h5> {release} </h5>\r\n                        {/* <FontAwesomeIcon icon={faHeart} className=\"heart\"/> */}\r\n                    </div>\r\n                    <div className=\"overview\">\r\n                        <p> {overview} </p>\r\n                    </div>\r\n                </motion.div>\r\n            </motion.div>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default MovieComponent;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SerieComponent.js",["161","162"],"import React from 'react'\r\nimport { fetchCover } from \"../api/combinedAPI\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar, faBookmark, faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SerieComponent = ({id, title, cover_path, rating, release, overview, popularity}) => {\r\n    const cover = fetchCover(cover_path);\r\n    return ( \r\n        <Link style={{ textDecoration: \"none\" }} to={{ pathname: `/serie/${id}` }}>\r\n            <motion.div initial={{ opacity: 0, scale: 0}} animate={{ opacity: 1, scale: 1 }} \r\n                transition={{ duration: 0.7 }} className=\"serie\">\r\n                <div className=\"serie-image\">\r\n                    <img src={cover} alt=\"\"/>\r\n                </div>\r\n                <div className=\"etiquette\">\r\n                     {/* <FontAwesomeIcon icon={faBookmark} className=\"bookmark\"/>  */}\r\n                     TV\r\n                </div> \r\n                <motion.div className=\"overlay\" initial={{ opacity: 0 }} animate={{ opacity: 1}}\r\n                transition={{ delay: 0.7}}>\r\n                    <div className=\"title\">\r\n                        <h3>{title}</h3>\r\n                    </div>\r\n                    <div className=\"subtitle\">\r\n                    <h4> <FontAwesomeIcon icon={faStar} style={{ color: \"yellow\" }}/> {rating} </h4>\r\n                    <h5> {release} </h5>\r\n                    {/* <FontAwesomeIcon icon={faHeart} className=\"heart\"/> */}\r\n                    </div>\r\n                    <div className=\"overview\">\r\n                        <p> {overview} </p>\r\n                    </div>\r\n                </motion.div>\r\n            </motion.div>\r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default SerieComponent;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\index.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\combinedReducers.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\combinedActions.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\combinedAPI.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\movieReducers.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\movieActions.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\movieAPI.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\serieReducers.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\serieActions.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\serieAPI.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\Search.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SideNav.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\SideNavEnglish.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\components\\Footer.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\SerieDetails.js",["163","164"],"import React, { useEffect } from 'react'\r\nimport SerieComponent from '../components/SerieComponent'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchSerieDetails } from '../actions/serieDetailsActions'\r\nimport { fetchCover, fetchBackdrop } from '../api/combinedAPI'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar, faPlay, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SerieDetails = ({isOpen, isFrench}) => {\r\n    //Obtention de l'id passé en paramètre\r\n    const { id } = useParams();\r\n\r\n    //Language\r\n    const language = isFrench ? \"fr\" : \"\";\r\n\r\n    //Envoi de la requete\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchSerieDetails(id, language));\r\n    }, [dispatch, id, language]);\r\n\r\n    const { serie, isLoading } = useSelector((state) => state.serieDetails);\r\n\r\n    //INFOS\r\n    const title = serie.name;\r\n    const release = serie.first_air_date;\r\n    const overview = serie.overview;\r\n    const inProduction = serie.in_production;\r\n    const numberOfSeasons = serie.number_of_seasons;\r\n    const numberOfEpisodes = serie.number_of_episodes;\r\n    const country = serie.origin_country;\r\n    const voteCount = serie.vote_count;\r\n    const voteAverage = serie.vote_average;\r\n    const homepage = serie.homepage;\r\n    const cover = fetchCover(serie.poster_path); \r\n    const backdrop = fetchBackdrop(serie.backdrop_path);\r\n    const genres = serie.genres.map((genre) => (<span key={genre.id}>{genre.name}</span>));\r\n    const creators = serie.created_by.map(creator => <span key={creator.id}> {creator.name} </span>);\r\n    const networks = serie.networks.map(network => <span key={network.id}> {network.name} </span>)\r\n    const productionCompanies = serie.production_companies.map(company => <span key={company.id}> {company.name} </span>)\r\n\r\n    //Trailer\r\n    let videos = serie.videos.results;\r\n    let trailers = videos.filter(video => video.type === \"Trailer\" && !video.key.includes(\"_\"));\r\n    let trailerKey = trailers.slice(0,1).map(trailer => trailer.key);\r\n    let trailerKeyNew = trailerKey.toString();\r\n    let ytBaseLink =\"https://www.youtube.com/embed/\"\r\n    let trailerLink = `${ytBaseLink}${trailerKeyNew}`;\r\n\r\n\r\n    //Similaires\r\n    let similar = serie.similar.results;\r\n    const similarSeries = similar\r\n        .slice(0, 12)\r\n        .map((serie) => (\r\n        <SerieComponent\r\n            key={serie.id}\r\n            id={serie.id}\r\n            title={serie.name}\r\n            rating={serie.vote_average}\r\n            release={serie.first_air_date}\r\n            overview={serie.overview}\r\n            cover_path={serie.poster_path}\r\n            popularity={serie.popularity}\r\n        />\r\n    ));\r\n\r\n\r\n\r\n    return ( \r\n        <div className={isOpen ? \"serie-details serie-details-open\" : \"serie-details\"}>\r\n            {\r\n                !isLoading && \r\n                <div className={isOpen ? \"all-details all-details-open\" : \"all-details\"}>\r\n                    {/* <div className=\"backdrop\">\r\n                        <img src={backdrop} alt=\"\"/>\r\n                    </div> */}\r\n                    <div className=\"top-details\">\r\n                        <div className=\"poster\">\r\n                            <img src={cover} alt=\"\"/>\r\n                        </div>\r\n                        <div className=\"other\">\r\n                            <div className=\"other-top\">\r\n                                <h1> {title} </h1>\r\n                                <h3><FontAwesomeIcon icon={faStar} style={{ color: \"yellow\" }} /> <span className=\"rating\">{voteAverage}</span>/ {voteCount} votes </h3>\r\n                                <div className=\"genres\">\r\n                                    {genres}\r\n                                </div>\r\n                                <div className=\"buttons\">\r\n                                    <div className=\"add-button button\">\r\n                                        <FontAwesomeIcon icon={faPlus} className=\"add-icon\" /> WATCH LIST\r\n                                    </div>\r\n                                    {\r\n                                        homepage &&\r\n                                        <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <div className=\"play-button button\">\r\n                                                <FontAwesomeIcon icon={faPlay} className=\"play-icon\" />\r\n                                                {isFrench ? \"REGARDER\" : \"WATCH\"}\r\n                                            </div>\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"other-bottom\">\r\n                                <h4> {isFrench ? \"Créée par : \" : \"Created by : \" } {creators}</h4>\r\n                                <h4> {isFrench ? \"Diffuseur : \" : \"Networks : \"} {networks} </h4>\r\n                                <h4> {isFrench ? \"Pays d'origine : \" : \"Origin country : \"} <span> {country} </span>  </h4>\r\n                                <h4> {isFrench ? \"Date de sortie : \" : \"Release Date : \"} <span>{release}</span> </h4>\r\n                                <h4> {isFrench ? \"Saisons : \" : \"Seasons : \"} <span>{numberOfSeasons}</span> </h4>\r\n                                <h4> {isFrench ? \"Episodes : \" : \"Episodes : \"} <span>{numberOfEpisodes}</span> </h4>\r\n                                {\r\n                                    inProduction &&\r\n                                    <h4 style={{ color: \"#ef233c\" }}> {isFrench ? \"En cours de production\" : \"In production\"}</h4>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom-details\">\r\n                        {\r\n                            overview &&\r\n                            <div className=\"details-overview\">\r\n                                <h3> {isFrench ? \"Resumé\" : \"Plot\"} </h3>\r\n                                <p> {overview} </p>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            trailerKeyNew.length > 0 &&\r\n                            <div className=\"trailer\">\r\n                                <h3> { isFrench ? \"Bande annonce\" : \"Trailer\"} </h3>\r\n                                <iframe title=\"youtube player\" frameBorder=\"0\" width=\"420\" height=\"315\" \r\n                                    allowFullScreen=\"allowfullscreen\"src={trailerLink}>\r\n                                </iframe>\r\n                            </div>\r\n                        }\r\n                        {\r\n                            similar.length > 0 &&\r\n                            <div className=\"similar\">\r\n                                <h3 className=\"similar-title\">{isFrench ? \"Vous aimerez peut-être\" : \"You may also like\" }</h3>\r\n                                <div className=\"similarList\">\r\n                                    {similarSeries}\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SerieDetails;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\MovieDetails.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\movieDetailsReducers.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\reducers\\serieDetailsReducers.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\movieDetailsActions.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\api\\categories.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\actions\\serieDetailsActions.js",[],"C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Newest.js",["165"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchNewMovies } from '../actions/movieActions'\r\nimport { fetchNewSeries } from '../actions/serieActions'\r\nimport MovieComponent from '../components/MovieComponent'\r\nimport SerieComponent from '../components/SerieComponent'\r\n\r\nconst Newest = ({ isFrench, isOpen }) => {\r\n    const dispatch = useDispatch();\r\n    const language = isFrench ? \"fr\" : \"\";\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchNewMovies(language, page));\r\n        dispatch(fetchNewSeries(language, page));\r\n    }, [dispatch, language, page])\r\n\r\n    const { newMovies } = useSelector((state) => state.movies);\r\n    const { newSeries } = useSelector((state) => state.series);\r\n\r\n    const printNewMovies = newMovies.map(movie => \r\n        <MovieComponent\r\n          key={movie.id}\r\n          id={movie.id}\r\n          title={movie.title}\r\n          rating={movie.vote_average}\r\n          release={movie.release_date}\r\n          overview={movie.overview}\r\n          cover_path={movie.poster_path}\r\n          popularity={movie.popularity}\r\n        />\r\n    )\r\n\r\n    const printNewSeries = newSeries.map(serie => \r\n        <SerieComponent\r\n          key={serie.id}\r\n          id={serie.id}\r\n          title={serie.name}\r\n          rating={serie.vote_average}\r\n          release={serie.first_air_date}\r\n          overview={serie.overview}\r\n          cover_path={serie.poster_path}\r\n          popularity={serie.popularity}\r\n        />\r\n    )\r\n\r\n    return ( \r\n        <div className={isOpen ? \"newest newest-open\" : \"newest\"}>\r\n            <div className=\"new-movies\">\r\n                <div className=\"movies-title\">\r\n                    <h1> {isFrench ? \"Au cinéma en ce moment\" : \"In theathers now\"} </h1>\r\n                </div>\r\n                <div className=\"new-movies-list\">\r\n                    {printNewMovies}\r\n                </div>\r\n            </div>\r\n            <div className=\"new-series\">\r\n                <div className=\"series-title\">\r\n                    <h1> {isFrench ? \"A la télé en ce moment\" : \"On air right now\"} </h1>\r\n                </div>\r\n                <div className=\"new-series-list\">\r\n                    {printNewSeries}\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Newest;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\TopRated.js",["166"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchTopRatedMovies } from '../actions/movieActions'\r\nimport { fetchTopRatedSeries } from '../actions/serieActions'\r\nimport MovieComponent from '../components/MovieComponent'\r\nimport SerieComponent from '../components/SerieComponent'\r\n\r\nconst TopRated = ({ isFrench, isOpen }) => {\r\n    const language = isFrench ? \"fr\" : \"\";\r\n    const [page, setPage] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTopRatedMovies(language, page));\r\n        dispatch(fetchTopRatedSeries(language, page));\r\n    }, [dispatch, language, page])\r\n\r\n    const { topRatedMovies } = useSelector((state) => state.movies);\r\n    const { topRatedSeries } = useSelector((state) => state.series);\r\n\r\n    const printTopMovies = topRatedMovies.map((movie) => \r\n        <MovieComponent\r\n          key={movie.id}\r\n          id={movie.id}\r\n          title={movie.title}\r\n          rating={movie.vote_average}\r\n          release={movie.release_date}\r\n          overview={movie.overview}\r\n          cover_path={movie.poster_path}\r\n          popularity={movie.popularity}\r\n        />)\r\n\r\n    const printTopSeries = topRatedSeries.map((serie) => \r\n        <SerieComponent\r\n            key={serie.id}\r\n            id={serie.id}\r\n            title={serie.name}\r\n            rating={serie.vote_average}\r\n            release={serie.first_air_date}\r\n            overview={serie.overview}\r\n            cover_path={serie.poster_path}\r\n            popularity={serie.popularity}\r\n        />)\r\n\r\n    return ( \r\n        <div className={isOpen ? \"top-rated top-rated-open\" : \"top-rated\"}>\r\n            <div className=\"top-movies\">\r\n                <div className=\"movies-title\">\r\n                    <h1> {isFrench ? \"Les films les mieux notés\" : \"Top rated movies\"} </h1>\r\n                </div>\r\n                <div className=\"top-movies-list\">\r\n                    {printTopMovies}\r\n                </div>\r\n            </div>\r\n            <div className=\"top-series\">\r\n                <div className=\"series-title\">\r\n                    <h1> {isFrench ? \"Les séries les mieux notées\" : \"Top rated series\"} </h1>\r\n                </div>\r\n                <div className=\"top-series-list\">\r\n                    {printTopSeries}\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default TopRated;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\Upcoming.js",["167","168","169"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchUpcomingMovies } from '../actions/movieActions'\r\nimport { fetchUpcomingSeries } from '../actions/serieActions'\r\nimport MovieComponent from '../components/MovieComponent'\r\nimport SerieComponent from '../components/SerieComponent'\r\n\r\nconst Upcoming = ({ isFrench, isOpen }) => {\r\n    const dispatch = useDispatch();\r\n    const language = isFrench ? \"fr\" : \"\";\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchUpcomingMovies(language, page));\r\n    }, [dispatch, language, page])\r\n\r\n    const { upcomingMovies } = useSelector((state) => state.movies);\r\n\r\n    const printUpcomingMovies = upcomingMovies.map((movie) => \r\n        <MovieComponent\r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.title}\r\n            rating={movie.vote_average}\r\n            release={movie.release_date}\r\n            overview={movie.overview}\r\n            cover_path={movie.poster_path}\r\n            popularity={movie.popularity}\r\n        />)\r\n\r\n    return ( \r\n        <div className={isOpen ? \"upcoming upcoming-open\" : \"upcoming\"}>\r\n            <div className=\"upcoming-movies\">\r\n                <div className=\"movies-title\">\r\n                    <h1> {isFrench ? \"Les films les plus attendus\" : \"Most anticipated movies\"} </h1>\r\n                </div>\r\n                <div className=\"upcoming-movies-list\">\r\n                    {printUpcomingMovies}\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Upcoming;","C:\\Users\\DELL\\My Office\\Projects\\shuffle\\src\\pages\\SearchPage.js",["170"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { searchSomething } from '../actions/combinedActions';\r\nimport MovieComponent from '../components/MovieComponent'\r\nimport SerieComponent from '../components/SerieComponent'\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nconst SearchPage = ({ isOpen, isFrench, toSearch }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const language = isFrench ? \"fr\" : \"\";\r\n    const [page, setPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n      dispatch(searchSomething(toSearch, language, page))\r\n    }, [dispatch, toSearch, page, language])\r\n\r\n    const { searched, numOfPages, numOfResults } = useSelector((state) => state.allTrends);\r\n\r\n    const printSearched = searched.map((item) => {\r\n        if (item.media_type === \"movie\") {\r\n          return (\r\n            <MovieComponent\r\n              key={item.id}\r\n              id={item.id}\r\n              title={item.title}\r\n              rating={item.vote_average}\r\n              release={item.release_date}\r\n              overview={item.overview}\r\n              cover_path={item.poster_path}\r\n              popularity={item.popularity}\r\n            />\r\n          );\r\n        } else if(item.media_type === \"tv\") {\r\n          return (\r\n            <SerieComponent\r\n              key={item.id}\r\n              id={item.id}\r\n              title={item.name}\r\n              rating={item.vote_average}\r\n              release={item.first_air_date}\r\n              overview={item.overview}\r\n              cover_path={item.poster_path}\r\n              popularity={item.popularity}\r\n            />\r\n          );\r\n        }\r\n      });\r\n\r\n    //Changer de page\r\n    const handlePageClick = ({ selected: selectedPage }) => {\r\n      setPage(selectedPage + 1);\r\n      document.documentElement.scrollTop = 0;\r\n    };\r\n\r\n    return ( \r\n        <div className={isOpen ? \"search-page search-page-open\" : \"search-page\"}>\r\n            <div className=\"searched-movies\">\r\n                <div className=\"movies-title\">\r\n                    <h1> {numOfResults} {isFrench ? \"résultats trouvés pour \" : \"results for \"} {toSearch} </h1>\r\n                </div>\r\n                <div className=\"searched-movies-list\">\r\n                    {printSearched}\r\n                </div>\r\n            </div>\r\n            <ReactPaginate\r\n              previousLabel={\"←\"}\r\n              nextLabel={\"→\"}\r\n              forcePage={page - 1}\r\n              pageCount={numOfPages}\r\n              onPageChange={handlePageClick}\r\n              pageRangeDisplayed={2}\r\n              marginPagesDisplayed={1}\r\n              containerClassName={\"pagination\"}\r\n              previousLinkClassName={\"pagination__link\"}\r\n              nextLinkClassName={\"pagination__link\"}\r\n              disabledClassName={\"pagination__link--disabled\"}\r\n              activeClassName={\"pagination__link--active\"}\r\n            />\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SearchPage;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":16},{"ruleId":"177","severity":1,"message":"181","line":76,"column":11,"nodeType":"179","messageId":"180","endLine":76,"endColumn":23},{"ruleId":"177","severity":1,"message":"182","line":81,"column":11,"nodeType":"179","messageId":"180","endLine":81,"endColumn":24},{"ruleId":"177","severity":1,"message":"183","line":4,"column":18,"nodeType":"179","messageId":"180","endLine":4,"endColumn":25},{"ruleId":"177","severity":1,"message":"184","line":4,"column":18,"nodeType":"179","messageId":"180","endLine":4,"endColumn":28},{"ruleId":"177","severity":1,"message":"183","line":4,"column":30,"nodeType":"179","messageId":"180","endLine":4,"endColumn":37},{"ruleId":"177","severity":1,"message":"185","line":37,"column":11,"nodeType":"179","messageId":"180","endLine":37,"endColumn":19},{"ruleId":"177","severity":1,"message":"186","line":41,"column":11,"nodeType":"179","messageId":"180","endLine":41,"endColumn":30},{"ruleId":"177","severity":1,"message":"187","line":11,"column":18,"nodeType":"179","messageId":"180","endLine":11,"endColumn":25},{"ruleId":"177","severity":1,"message":"187","line":10,"column":18,"nodeType":"179","messageId":"180","endLine":10,"endColumn":25},{"ruleId":"177","severity":1,"message":"188","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":29},{"ruleId":"177","severity":1,"message":"189","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":22},{"ruleId":"177","severity":1,"message":"187","line":11,"column":18,"nodeType":"179","messageId":"180","endLine":11,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":20,"column":47,"nodeType":"192","messageId":"193","endLine":20,"endColumn":49},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],["194"],["195"],"no-unused-vars","'motion' is defined but never used.","Identifier","unusedVar","'headerFrench' is assigned a value but never used.","'headerEnglish' is assigned a value but never used.","'faHeart' is defined but never used.","'faBookmark' is defined but never used.","'backdrop' is assigned a value but never used.","'productionCompanies' is assigned a value but never used.","'setPage' is assigned a value but never used.","'fetchUpcomingSeries' is defined but never used.","'SerieComponent' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]